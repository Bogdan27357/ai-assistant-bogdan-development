import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

interface Assistant {
  id: string;
  name: string;
  role: string;
  description: string;
  icon: string;
  color: string;
  capabilities: string[];
  examples: string[];
}

const AIAssistants = () => {
  const [selectedAssistant, setSelectedAssistant] = useState<Assistant | null>(null);
  const [task, setTask] = useState('');
  const [result, setResult] = useState('');
  const [generating, setGenerating] = useState(false);

  const assistants: Assistant[] = [
    {
      id: 'copywriter',
      name: '–ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä',
      role: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –ø—Ä–æ–¥–∞—é—â–∏–º —Ç–µ–∫—Å—Ç–∞–º',
      description: '–°–æ–∑–¥–∞—é —Ü–µ–ø–ª—è—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–¥–∞—é—Ç',
      icon: 'PenTool',
      color: 'from-orange-500 to-red-600',
      capabilities: [
        '–ü—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ª–µ–Ω–¥–∏–Ω–≥–æ–≤',
        '–†–µ–∫–ª–∞–º–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è',
        'Email-—Ä–∞—Å—Å—ã–ª–∫–∏',
        '–°–ª–æ–≥–∞–Ω—ã –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏',
        '–û–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤',
        '–ü–æ—Å—Ç—ã –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π'
      ],
      examples: [
        '–ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥–∞—é—â–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞ –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É',
        '–°–æ–∑–¥–∞–π 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–ª–æ–≥–∞–Ω–∞ –¥–ª—è –∫–æ—Ñ–µ–π–Ω–∏',
        '–ù–∞–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞'
      ]
    },
    {
      id: 'smm',
      name: 'SMM-–º–µ–Ω–µ–¥–∂–µ—Ä',
      role: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–æ—Ü—Å–µ—Ç—è–º',
      description: '–ü–ª–∞–Ω–∏—Ä—É—é –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –≤–µ–¥—É —Å–æ—Ü—Å–µ—Ç–∏',
      icon: 'Share2',
      color: 'from-pink-500 to-rose-600',
      capabilities: [
        '–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω—ã –Ω–∞ –º–µ—Å—è—Ü',
        '–¢–µ–∫—Å—Ç—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤',
        '–ò–¥–µ–∏ –¥–ª—è Reels –∏ Stories',
        '–•–µ—à—Ç–µ–≥–∏ –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏',
        '–ö–æ–Ω–∫—É—Ä—Å—ã –∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏',
        '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤'
      ],
      examples: [
        '–°–æ–∑–¥–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü –¥–ª—è –±—Ä–µ–Ω–¥–∞ –æ–¥–µ–∂–¥—ã',
        '–ù–∞–ø–∏—à–∏ 10 –ø–æ—Å—Ç–æ–≤ –¥–ª—è Instagram –∫–æ—Å–º–µ—Ç–∏–∫–∏',
        '–ü—Ä–∏–¥—É–º–∞–π –º–µ—Ö–∞–Ω–∏–∫—É –∫–æ–Ω–∫—É—Ä—Å–∞ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è'
      ]
    },
    {
      id: 'programmer',
      name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç',
      role: 'Senior —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      description: '–ü–∏—à—É —á–∏—Å—Ç—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∫–æ–¥',
      icon: 'Code',
      color: 'from-green-500 to-emerald-600',
      capabilities: [
        '–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ –ª—é–±—ã—Ö —è–∑—ã–∫–∞—Ö',
        '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è',
        '–û—Ç–ª–∞–¥–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–≥–æ–≤',
        'Code review',
        '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
        '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Ç–µ—Å—Ç—ã'
      ],
      examples: [
        '–ù–∞–ø–∏—à–∏ REST API –Ω–∞ Python –¥–ª—è –±–ª–æ–≥–∞',
        '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç SQL –∑–∞–ø—Ä–æ—Å',
        '–°–æ–∑–¥–∞–π React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
      ]
    },
    {
      id: 'analyst',
      name: '–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫',
      role: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö',
      description: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ –∏ –¥–∞—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
      icon: 'BarChart3',
      color: 'from-blue-500 to-cyan-600',
      capabilities: [
        'SWOT-–∞–Ω–∞–ª–∏–∑',
        '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤',
        '–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
        '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤',
        '–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω—ã'
      ],
      examples: [
        '–ü—Ä–æ–≤–µ–¥–∏ SWOT-–∞–Ω–∞–ª–∏–∑ –¥–ª—è –º–æ–µ–≥–æ —Å—Ç–∞—Ä—Ç–∞–ø–∞',
        '–°–æ–∑–¥–∞–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –º–æ–¥–µ–ª—å –Ω–∞ 3 –≥–æ–¥–∞',
        '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä—ã–Ω–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã'
      ]
    },
    {
      id: 'translator',
      name: '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫',
      role: '–õ–∏–Ω–≥–≤–∏—Å—Ç-–ø–æ–ª–∏–≥–ª–æ—Ç',
      description: '–ü–µ—Ä–µ–≤–æ–∂—É —Ç–µ–∫—Å—Ç—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç–∏–ª—è',
      icon: 'Languages',
      color: 'from-purple-500 to-indigo-600',
      capabilities: [
        '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ 100+ —è–∑—ã–∫–æ–≤',
        '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã',
        '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã',
        '–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
        '–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å–ª–æ–≥–∞–Ω–æ–≤',
        '–í—ã—á–∏—Ç–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤'
      ],
      examples: [
        '–ü–µ—Ä–µ–≤–µ–¥–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
        '–ê–¥–∞–ø—Ç–∏—Ä—É–π —Å–ª–æ–≥–∞–Ω –¥–ª—è –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞',
        '–õ–æ–∫–∞–ª–∏–∑—É–π –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ 5 —è–∑—ã–∫–æ–≤'
      ]
    },
    {
      id: 'teacher',
      name: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å',
      role: '–ü–µ–¥–∞–≥–æ–≥-–º–µ—Ç–æ–¥–∏—Å—Ç',
      description: '–û–±—ä—è—Å–Ω—è—é —Å–ª–æ–∂–Ω–æ–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏',
      icon: 'GraduationCap',
      color: 'from-yellow-500 to-amber-600',
      capabilities: [
        '–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–º',
        '–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á',
        '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º',
        '–°–æ–∑–¥–∞–Ω–∏–µ —É—á–µ–±–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤',
        '–¢–µ—Å—Ç—ã –∏ –∑–∞–¥–∞–Ω–∏—è',
        '–ö–æ–Ω—Å–ø–µ–∫—Ç—ã –∏ —à–ø–∞—Ä–≥–∞–ª–∫–∏'
      ],
      examples: [
        '–û–±—ä—è—Å–Ω–∏ –∫–≤–∞–Ω—Ç–æ–≤—É—é —Ñ–∏–∑–∏–∫—É –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏',
        '–†–µ—à–∏ —ç—Ç—É –∑–∞–¥–∞—á—É –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –ø–æ—à–∞–≥–æ–≤–æ',
        '–°–æ–∑–¥–∞–π –ø–ª–∞–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –ø–æ —Ö–∏–º–∏–∏'
      ]
    }
  ];

  const handleGenerate = async () => {
    if (!task.trim()) {
      toast.error('–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É');
      return;
    }

    setGenerating(true);
    try {
      await new Promise(resolve => setTimeout(resolve, 2000));

      const responses: Record<string, string> = {
        copywriter: `üìù –ü–†–û–î–ê–Æ–©–ò–ô –¢–ï–ö–°–¢

üéØ –ó–∞–≥–æ–ª–æ–≤–æ–∫:
"–û—Å–≤–æ–π—Ç–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∑–∞ 30 –¥–Ω–µ–π –∏ —É–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–æ–¥–∞–∂–∏ –≤ 2 —Ä–∞–∑–∞"

üíé –û–ø–∏—Å–∞–Ω–∏–µ:
–ó–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Å–∫—É—á–Ω—É—é —Ç–µ–æ—Ä–∏—é! –ù–∞—à –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å ‚Äî —ç—Ç–æ:
‚úÖ –ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è
‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã –∏–∑ –≤–∞—à–µ–π –Ω–∏—à–∏
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ 24/7
‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥

üéÅ –ë–æ–Ω—É—Å—ã:
‚Ä¢ –®–∞–±–ª–æ–Ω—ã 50 –ø—Ä–æ–¥–∞—é—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–æ–º—å—é–Ω–∏—Ç–∏
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏

‚ö°Ô∏è –¢–æ–ª—å–∫–æ 3 –¥–Ω—è: —Å–∫–∏–¥–∫–∞ 50%!

üëâ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å`,

        smm: `üìÖ –ö–û–ù–¢–ï–ù–¢-–ü–õ–ê–ù –ù–ê –ú–ï–°–Ø–¶

–ù–µ–¥–µ–ª—è 1: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±—Ä–µ–Ω–¥–æ–º
‚Ä¢ –ü–ù: –ò—Å—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞ (–∫–∞—Ä—É—Å–µ–ª—å)
‚Ä¢ –°–†: Behind the scenes –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ (Reels)
‚Ä¢ –ü–¢: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –∫–æ–º–∞–Ω–¥–æ–π (Stories)

–ù–µ–¥–µ–ª—è 2: –ü—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è –ª–∏–Ω–µ–π–∫–∞
‚Ä¢ –ü–ù: –¢–æ–ø-5 —Ö–∏—Ç–æ–≤ —Å–µ–∑–æ–Ω–∞ (–ø–æ—Å—Ç —Å —Ñ–æ—Ç–æ)
‚Ä¢ –°–†: –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä (–ø–æ–ª–µ–∑–Ω—ã–π Reels)
‚Ä¢ –ü–¢: –ù–æ–≤–∏–Ω–∫–∞ –Ω–µ–¥–µ–ª–∏ (Stories + —Å—Å—ã–ª–∫–∞)

–ù–µ–¥–µ–ª—è 3: –í–æ–≤–ª–µ—á–µ–Ω–∏–µ
‚Ä¢ –ü–ù: –û–ø—Ä–æ—Å "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –∫—Ä—É—á–µ?" (Stories)
‚Ä¢ –°–†: –ö–æ–Ω–∫—É—Ä—Å —Å –ø—Ä–∏–∑–æ–º (–ø–æ—Å—Ç + –ø—Ä–∞–≤–∏–ª–∞)
‚Ä¢ –ü–¢: UGC –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ (Reels)

–ù–µ–¥–µ–ª—è 4: –ü—Ä–æ–¥–∞–∂–∏
‚Ä¢ –ü–ù: –°–∫–∏–¥–∫–∞ –¥–Ω—è -30% (Stories)
‚Ä¢ –°–†: –ü–æ–¥–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ (–∫–∞—Ä—É—Å–µ–ª—å)
‚Ä¢ –ü–¢: Flash sale (–ø–æ—Å—Ç + —Ç–∞–π–º–µ—Ä)`,

        programmer: `// REST API –¥–ª—è –±–ª–æ–≥–∞ –Ω–∞ Python (FastAPI)

from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List, Optional
from datetime import datetime

app = FastAPI(title="Blog API")

class Post(BaseModel):
    id: Optional[int] = None
    title: str
    content: str
    author: str
    created_at: Optional[datetime] = None
    
posts_db = []

@app.get("/posts", response_model=List[Post])
async def get_posts(skip: int = 0, limit: int = 10):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤"""
    return posts_db[skip:skip + limit]

@app.get("/posts/{post_id}", response_model=Post)
async def get_post(post_id: int):
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç –ø–æ ID"""
    for post in posts_db:
        if post.id == post_id:
            return post
    raise HTTPException(status_code=404, detail="Post not found")

@app.post("/posts", response_model=Post)
async def create_post(post: Post):
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç"""
    post.id = len(posts_db) + 1
    post.created_at = datetime.now()
    posts_db.append(post)
    return post

@app.put("/posts/{post_id}")
async def update_post(post_id: int, updated_post: Post):
    """–û–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç"""
    for i, post in enumerate(posts_db):
        if post.id == post_id:
            posts_db[i] = updated_post
            return updated_post
    raise HTTPException(status_code=404, detail="Post not found")

@app.delete("/posts/{post_id}")
async def delete_post(post_id: int):
    """–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç"""
    for i, post in enumerate(posts_db):
        if post.id == post_id:
            posts_db.pop(i)
            return {"message": "Post deleted"}
    raise HTTPException(status_code=404, detail="Post not found")`,

        analyst: `üìä SWOT-–ê–ù–ê–õ–ò–ó –°–¢–ê–†–¢–ê–ü–ê

üí™ STRENGTHS (–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã):
‚Ä¢ –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –£–¢–ü
‚Ä¢ –û–ø—ã—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (10+ –ª–µ—Ç –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏)
‚Ä¢ –ù–∏–∑–∫–∞—è —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
‚Ä¢ –ì–∏–±–∫–∞—è –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å
‚Ä¢ –ì–æ—Ç–æ–≤–∞—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞ (1000 pre-orders)

‚ö†Ô∏è WEAKNESSES (–°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã):
‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç
‚Ä¢ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
‚Ä¢ –ú–∞–ª–∞—è —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å –±—Ä–µ–Ω–¥–∞
‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–∞—Ç–µ–Ω—Ç–Ω–æ–π –∑–∞—â–∏—Ç—ã
‚Ä¢ –ù–µ–±–æ–ª—å—à–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏

üéØ OPPORTUNITIES (–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏):
‚Ä¢ –†–æ—Å—Ç —Ä—ã–Ω–∫–∞ –Ω–∞ 25% –≤ –≥–æ–¥
‚Ä¢ –ù–∏–∑–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –≤ –Ω–∏—à–µ
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã—Ö–æ–¥–∞ –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ä—ã–Ω–æ–∫
‚Ä¢ –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –∫—Ä—É–ø–Ω—ã–º–∏ —Ä–∏—Ç–µ–π–ª–µ—Ä–∞–º–∏
‚Ä¢ –ì—Ä–∞–Ω—Ç–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤

‚õî THREATS (–£–≥—Ä–æ–∑—ã):
‚Ä¢ –ü–æ—è–≤–ª–µ–Ω–∏–µ –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å
‚Ä¢ –†–æ—Å—Ç —Ü–µ–Ω –Ω–∞ —Å—ã—Ä—å–µ
‚Ä¢ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —É—Å—Ç–∞—Ä–µ–≤–∞–Ω–∏–µ

üìà –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
1. –î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
2. –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ (20% –±—é–¥–∂–µ—Ç–∞)
3. –û—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Ç–µ–Ω—Ç–Ω—É—é –∑–∞—â–∏—Ç—É
4. –†–∞–∑–≤–∏–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω-–∫–∞–Ω–∞–ª—ã –ø—Ä–æ–¥–∞–∂
5. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏`
      };

      const response = responses[selectedAssistant?.id || ''] || 
        `–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ "${selectedAssistant?.name}":\n\n${task}`;

      setResult(response);
      toast.success('–ì–æ—Ç–æ–≤–æ!');
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
    } finally {
      setGenerating(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-indigo-950 to-slate-900 pt-24 pb-16 px-6">
      <div className="container mx-auto max-w-7xl">
        <div className="text-center mb-8 animate-fade-in">
          <div className="inline-flex items-center gap-2 px-6 py-3 rounded-full bg-gradient-to-r from-indigo-500/20 to-purple-500/20 border border-indigo-500/30 mb-6 backdrop-blur-sm">
            <Icon name="Users" size={20} className="text-indigo-400" />
            <span className="text-sm font-medium bg-gradient-to-r from-indigo-300 to-purple-300 bg-clip-text text-transparent">
              AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã
            </span>
          </div>
          <h1 className="text-5xl md:text-6xl font-black mb-6 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
            –ö–æ–º–∞–Ω–¥–∞ AI —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
          </h1>
          <p className="text-xl text-gray-400 max-w-3xl mx-auto">
            –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á
          </p>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
          {assistants.map((assistant, index) => (
            <Card
              key={assistant.id}
              className="p-6 bg-gradient-to-br from-slate-900/95 to-slate-800/95 border-slate-700/50 hover:border-indigo-500/50 cursor-pointer transition-all backdrop-blur-xl animate-scale-in"
              style={{ animationDelay: `${index * 0.1}s` }}
              onClick={() => setSelectedAssistant(assistant)}
            >
              <div className={`w-16 h-16 rounded-2xl bg-gradient-to-br ${assistant.color} flex items-center justify-center mb-4`}>
                <Icon name={assistant.icon as any} size={32} className="text-white" />
              </div>
              
              <h3 className="text-2xl font-bold text-white mb-2">{assistant.name}</h3>
              <p className="text-indigo-400 text-sm mb-3">{assistant.role}</p>
              <p className="text-gray-400 text-sm mb-4">{assistant.description}</p>

              <div className="space-y-2 mb-4">
                <p className="text-xs text-gray-500 font-semibold">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</p>
                {assistant.capabilities.slice(0, 3).map((cap, idx) => (
                  <div key={idx} className="flex items-start gap-2">
                    <Icon name="Check" size={14} className="text-green-400 mt-0.5 shrink-0" />
                    <span className="text-gray-400 text-xs">{cap}</span>
                  </div>
                ))}
              </div>

              <Button className={`w-full bg-gradient-to-r ${assistant.color} hover:opacity-90`}>
                <Icon name="ArrowRight" size={16} className="mr-2" />
                –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
              </Button>
            </Card>
          ))}
        </div>

        <Dialog open={!!selectedAssistant} onOpenChange={() => setSelectedAssistant(null)}>
          <DialogContent className="bg-slate-900 border-slate-700 text-white max-w-4xl max-h-[90vh] overflow-y-auto">
            {selectedAssistant && (
              <>
                <DialogHeader>
                  <DialogTitle className="text-3xl flex items-center gap-3">
                    <div className={`w-12 h-12 rounded-xl bg-gradient-to-br ${selectedAssistant.color} flex items-center justify-center`}>
                      <Icon name={selectedAssistant.icon as any} size={24} className="text-white" />
                    </div>
                    {selectedAssistant.name}
                  </DialogTitle>
                  <p className="text-indigo-400">{selectedAssistant.role}</p>
                </DialogHeader>

                <div className="space-y-6">
                  <div>
                    <h4 className="text-sm font-semibold text-gray-400 mb-3">–ß—Ç–æ —É–º–µ—é:</h4>
                    <div className="grid md:grid-cols-2 gap-2">
                      {selectedAssistant.capabilities.map((cap, idx) => (
                        <div key={idx} className="flex items-start gap-2">
                          <Icon name="CheckCircle" size={16} className="text-green-400 mt-0.5 shrink-0" />
                          <span className="text-gray-300 text-sm">{cap}</span>
                        </div>
                      ))}
                    </div>
                  </div>

                  <div>
                    <h4 className="text-sm font-semibold text-gray-400 mb-3">–ü—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞—á:</h4>
                    <div className="space-y-2">
                      {selectedAssistant.examples.map((example, idx) => (
                        <Button
                          key={idx}
                          variant="outline"
                          className="w-full justify-start border-slate-700 text-left h-auto py-3"
                          onClick={() => setTask(example)}
                        >
                          <Icon name="Lightbulb" size={16} className="mr-2 shrink-0" />
                          <span className="text-sm">{example}</span>
                        </Button>
                      ))}
                    </div>
                  </div>

                  <div>
                    <h4 className="text-sm font-semibold text-gray-400 mb-2">–í–∞—à–∞ –∑–∞–¥–∞—á–∞:</h4>
                    <Textarea
                      value={task}
                      onChange={(e) => setTask(e.target.value)}
                      placeholder="–û–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å..."
                      className="bg-slate-800 border-slate-700 text-white min-h-[100px]"
                    />
                  </div>

                  <Button
                    onClick={handleGenerate}
                    disabled={generating || !task}
                    className={`w-full bg-gradient-to-r ${selectedAssistant.color} hover:opacity-90 py-6 text-lg`}
                  >
                    {generating ? (
                      <><Icon name="Loader2" size={24} className="mr-2 animate-spin" />–†–∞–±–æ—Ç–∞—é...</>
                    ) : (
                      <><Icon name="Sparkles" size={24} className="mr-2" />–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É</>
                    )}
                  </Button>

                  {result && (
                    <div>
                      <h4 className="text-sm font-semibold text-gray-400 mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç:</h4>
                      <div className="bg-slate-950 border border-slate-700 rounded-lg p-4">
                        <pre className="text-gray-300 text-sm whitespace-pre-wrap font-sans">{result}</pre>
                      </div>
                      <Button
                        onClick={() => {
                          navigator.clipboard.writeText(result);
                          toast.success('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
                        }}
                        variant="outline"
                        className="w-full mt-3 border-slate-700"
                      >
                        <Icon name="Copy" size={16} className="mr-2" />
                        –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                      </Button>
                    </div>
                  )}
                </div>
              </>
            )}
          </DialogContent>
        </Dialog>
      </div>
    </div>
  );
};

export default AIAssistants;
