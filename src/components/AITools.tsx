import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

const AITools = () => {
  const [translatorText, setTranslatorText] = useState('');
  const [translatedText, setTranslatedText] = useState('');
  const [targetLang, setTargetLang] = useState('en');
  const [sourceLang, setSourceLang] = useState('ru');
  const [loading, setLoading] = useState(false);

  const languages = [
    { code: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
    { code: 'en', name: 'English', flag: 'üá¨üáß' },
    { code: 'es', name: 'Espa√±ol', flag: 'üá™üá∏' },
    { code: 'fr', name: 'Fran√ßais', flag: 'üá´üá∑' },
    { code: 'de', name: 'Deutsch', flag: 'üá©üá™' },
    { code: 'zh', name: '‰∏≠Êñá', flag: 'üá®üá≥' },
    { code: 'ja', name: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' },
    { code: 'ko', name: 'ÌïúÍµ≠Ïñ¥', flag: 'üá∞üá∑' },
    { code: 'ar', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶' },
    { code: 'pt', name: 'Portugu√™s', flag: 'üáµüáπ' }
  ];

  const handleTranslate = async () => {
    if (!translatorText.trim()) {
      toast.error('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞');
      return;
    }

    setLoading(true);
    try {
      await new Promise(resolve => setTimeout(resolve, 600));

      const apiUrl = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${sourceLang}&tl=${targetLang}&dt=t&q=${encodeURIComponent(translatorText)}`;
      
      try {
        const response = await fetch(apiUrl);
        const data = await response.json();
        
        if (data && data[0] && data[0][0] && data[0][0][0]) {
          const translated = data[0].map((item: any) => item[0]).join('');
          setTranslatedText(translated);
          toast.success('–¢–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω!');
        } else {
          throw new Error('Invalid response');
        }
      } catch (apiError) {
        const fallbackTranslations: Record<string, Record<string, string>> = {
          '–ü—Ä–∏–≤–µ—Ç': { en: 'Hello', es: 'Hola', fr: 'Bonjour', de: 'Hallo', zh: '‰Ω†Â•Ω', ja: '„Åì„Çì„Å´„Å°„ÅØ', ko: 'ÏïàÎÖïÌïòÏÑ∏Ïöî', ar: 'ŸÖÿ±ÿ≠ÿ®ÿß', pt: 'Ol√°' },
          '–°–ø–∞—Å–∏–±–æ': { en: 'Thank you', es: 'Gracias', fr: 'Merci', de: 'Danke', zh: 'Ë∞¢Ë∞¢', ja: '„ÅÇ„Çä„Åå„Å®„ÅÜ', ko: 'Í∞êÏÇ¨Ìï©ÎãàÎã§', ar: 'ÿ¥ŸÉÿ±ÿß', pt: 'Obrigado' },
          '–ö–∞–∫ –¥–µ–ª–∞?': { en: 'How are you?', es: '¬øC√≥mo est√°s?', fr: 'Comment allez-vous?', de: 'Wie geht es dir?', zh: '‰Ω†Â•ΩÂêóÔºü', ja: '„ÅäÂÖÉÊ∞ó„Åß„Åô„ÅãÔºü', ko: 'Ïñ¥ÎñªÍ≤å ÏßÄÎÇ¥ÏÑ∏Ïöî?', ar: 'ŸÉŸäŸÅ ÿ≠ÿßŸÑŸÉÿü', pt: 'Como vai?' },
          '–î–∞': { en: 'Yes', es: 'S√≠', fr: 'Oui', de: 'Ja', zh: 'ÊòØ', ja: '„ÅØ„ÅÑ', ko: 'ÎÑ§', ar: 'ŸÜÿπŸÖ', pt: 'Sim' },
          '–ù–µ—Ç': { en: 'No', es: 'No', fr: 'Non', de: 'Nein', zh: '‰∏ç', ja: '„ÅÑ„ÅÑ„Åà', ko: 'ÏïÑÎãàÏöî', ar: 'ŸÑÿß', pt: 'N√£o' },
          '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞': { en: 'Please', es: 'Por favor', fr: "S'il vous pla√Æt", de: 'Bitte', zh: 'ËØ∑', ja: '„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô', ko: 'Ï†úÎ∞ú', ar: 'ŸÖŸÜ ŸÅÿ∂ŸÑŸÉ', pt: 'Por favor' },
          '–ò–∑–≤–∏–Ω–∏—Ç–µ': { en: 'Sorry', es: 'Lo siento', fr: 'D√©sol√©', de: 'Entschuldigung', zh: 'ÂØπ‰∏çËµ∑', ja: '„Åî„ÇÅ„Çì„Å™„Åï„ÅÑ', ko: 'Ï£ÑÏÜ°Ìï©ÎãàÎã§', ar: 'ÿ¢ÿ≥ŸÅ', pt: 'Desculpe' },
          'Hello': { ru: '–ü—Ä–∏–≤–µ—Ç', es: 'Hola', fr: 'Bonjour', de: 'Hallo', zh: '‰Ω†Â•Ω', ja: '„Åì„Çì„Å´„Å°„ÅØ', ko: 'ÏïàÎÖïÌïòÏÑ∏Ïöî', ar: 'ŸÖÿ±ÿ≠ÿ®ÿß', pt: 'Ol√°' },
          'Thank you': { ru: '–°–ø–∞—Å–∏–±–æ', es: 'Gracias', fr: 'Merci', de: 'Danke', zh: 'Ë∞¢Ë∞¢', ja: '„ÅÇ„Çä„Åå„Å®„ÅÜ', ko: 'Í∞êÏÇ¨Ìï©ÎãàÎã§', ar: 'ÿ¥ŸÉÿ±ÿß', pt: 'Obrigado' },
          'Yes': { ru: '–î–∞', es: 'S√≠', fr: 'Oui', de: 'Ja', zh: 'ÊòØ', ja: '„ÅØ„ÅÑ', ko: 'ÎÑ§', ar: 'ŸÜÿπŸÖ', pt: 'Sim' },
          'No': { ru: '–ù–µ—Ç', es: 'No', fr: 'Non', de: 'Nein', zh: '‰∏ç', ja: '„ÅÑ„ÅÑ„Åà', ko: 'ÏïÑÎãàÏöî', ar: 'ŸÑÿß', pt: 'N√£o' }
        };

        const fallback = fallbackTranslations[translatorText.trim()]?.[targetLang];
        if (fallback) {
          setTranslatedText(fallback);
          toast.success('–¢–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω! (–¥–µ–º–æ-—Ä–µ–∂–∏–º)');
        } else {
          const langNames: Record<string, string> = {
            en: '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', es: '–∏—Å–ø–∞–Ω—Å–∫–∏–π', fr: '—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π', de: '–Ω–µ–º–µ—Ü–∫–∏–π',
            zh: '–∫–∏—Ç–∞–π—Å–∫–∏–π', ja: '—è–ø–æ–Ω—Å–∫–∏–π', ko: '–∫–æ—Ä–µ–π—Å–∫–∏–π', ar: '–∞—Ä–∞–±—Å–∫–∏–π', pt: '–ø–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π', ru: '—Ä—É—Å—Å–∫–∏–π'
          };
          setTranslatedText(`[${langNames[sourceLang]} ‚Üí ${langNames[targetLang]}]: ${translatorText}`);
          toast.success('–î–µ–º–æ-–ø–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
        }
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞');
    } finally {
      setLoading(false);
    }
  };

  const capabilities = [
    {
      category: '–Ø–∑—ã–∫–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
      icon: 'Languages',
      gradient: 'from-indigo-500 to-purple-600',
      items: [
        '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ 100+ —è–∑—ã–∫–æ–≤ –º–∏—Ä–∞',
        '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª—è –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
        '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã',
        '–û–∑–≤—É—á–∫–∞ –Ω–∞ 8 —è–∑—ã–∫–∞—Ö —Å 16 –≥–æ–ª–æ—Å–∞–º–∏',
        '–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
        '–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤',
        '–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'
      ]
    },
    {
      category: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
      icon: 'Code',
      gradient: 'from-purple-500 to-pink-600',
      items: [
        '–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ 50+ —è–∑—ã–∫–∞—Ö',
        '–û—Ç–ª–∞–¥–∫–∞ –∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞',
        'Code review –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è',
        '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
        '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
        '–ù–∞–ø–∏—Å–∞–Ω–∏–µ unit-—Ç–µ—Å—Ç–æ–≤',
        'DevOps –∏ CI/CD —Å–∫—Ä–∏–ø—Ç—ã',
        'SQL –∑–∞–ø—Ä–æ—Å—ã –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ë–î'
      ]
    },
    {
      category: '–ê–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞',
      icon: 'Brain',
      gradient: 'from-blue-500 to-cyan-600',
      items: [
        '–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ PDF',
        '–û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤ (200K —Ç–æ–∫–µ–Ω–æ–≤)',
        '–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
        '–ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤',
        'Sentiment –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–≤',
        'OCR —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞',
        '–í–∏–¥–µ–æ-–∞–Ω–∞–ª–∏–∑ –∏ —Å—Ç–µ–Ω–æ–≥—Ä–∞–º–º—ã',
        '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'
      ]
    },
    {
      category: '–ö–æ–Ω—Ç–µ–Ω—Ç –∏ –∫—Ä–µ–∞—Ç–∏–≤',
      icon: 'Palette',
      gradient: 'from-emerald-500 to-teal-600',
      items: [
        '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π –∏ —Ç–µ–∫—Å—Ç–æ–≤',
        '–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ –∏ —Å–ª–æ–≥–∞–Ω—ã',
        '–°—Ü–µ–Ω–∞—Ä–∏–∏ –∏ —Å—Ç–æ—Ä–∏—Ç–µ–ª–ª–∏–Ω–≥',
        'Email —Ä–∞—Å—Å—ã–ª–∫–∏',
        '–ü–æ—Å—Ç—ã –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π',
        'SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã',
        '–ü–æ—ç–∑–∏—è –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø–∏—Å—å–º–æ',
        '–ù–∞–∑–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤'
      ]
    },
    {
      category: '–ë–∏–∑–Ω–µ—Å –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      icon: 'Briefcase',
      gradient: 'from-orange-500 to-red-600',
      items: [
        '–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏',
        '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ (SWOT)',
        '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã',
        '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
        '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –ø–∏—Ç—á–∏',
        'KPI –¥–∞—à–±–æ—Ä–¥—ã –∏ –º–µ—Ç—Ä–∏–∫–∏',
        '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–∞–∂',
        '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –∏ —Ç—Ä–µ–Ω–¥–æ–≤'
      ]
    },
    {
      category: '–û–±—É—á–µ–Ω–∏–µ –∏ –Ω–∞—É–∫–∞',
      icon: 'GraduationCap',
      gradient: 'from-pink-500 to-rose-600',
      items: [
        '–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–º',
        '–†–µ—à–µ–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á',
        '–ù–∞—É—á–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã',
        '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤',
        '–ü–æ–º–æ—â—å —Å –¥–æ–º–∞—à–Ω–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏',
        '–°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –∏ —É—Ä–æ–∫–æ–≤',
        '–¢–µ—Å—Ç—ã –∏ –æ–ø—Ä–æ—Å–Ω–∏–∫–∏',
        '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã'
      ]
    },
    {
      category: '–†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏',
      icon: 'Database',
      gradient: 'from-cyan-500 to-blue-600',
      items: [
        '–û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö',
        '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≥—Ä–∞—Ñ–∏–∫–∏',
        '–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑',
        'Machine Learning –º–æ–¥–µ–ª–∏',
        '–ü–∞—Ä—Å–∏–Ω–≥ –∏ —Å–∫—Ä–∞–ø–∏–Ω–≥',
        'ETL –ø—Ä–æ—Ü–µ—Å—Å—ã',
        'Data mining –∏ insights'
      ]
    },
    {
      category: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è',
      icon: 'Workflow',
      gradient: 'from-violet-500 to-purple-600',
      items: [
        '–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤ –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤',
        '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω—ã',
        'Web scraping',
        'Email –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∏',
        '–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –∑–∞–¥–∞—á',
        'API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
        'Workflow –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'
      ]
    }
  ];

  const [showCapabilities, setShowCapabilities] = useState(false);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-indigo-950 to-slate-900 pt-24 pb-16 px-6">
      <div className="container mx-auto max-w-7xl">
        <div className="text-center mb-12 animate-fade-in">
          <div className="inline-flex items-center gap-2 px-6 py-3 rounded-full bg-gradient-to-r from-indigo-500/20 to-purple-500/20 border border-indigo-500/30 mb-6 backdrop-blur-sm">
            <Icon name="Wrench" size={20} className="text-indigo-400" />
            <span className="text-sm font-medium bg-gradient-to-r from-indigo-300 to-purple-300 bg-clip-text text-transparent">
              –ò–ò –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
            </span>
          </div>
          <h1 className="text-5xl md:text-6xl font-black mb-6 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
            –ú–æ—â–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ò–ò
          </h1>
          <p className="text-xl text-gray-400 max-w-3xl mx-auto mb-8">
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
          </p>
          
          <Button
            onClick={() => setShowCapabilities(!showCapabilities)}
            className="bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white px-8 py-6 text-lg font-bold rounded-2xl shadow-2xl hover:scale-105 transition-all mb-8"
          >
            <Icon name="List" size={24} className="mr-3" />
            {showCapabilities ? '–°–∫—Ä—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ò–ò'}
          </Button>

          {showCapabilities && (
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12 animate-fade-in">
              {capabilities.map((cap, idx) => (
                <Card
                  key={idx}
                  className="p-6 bg-gradient-to-br from-slate-900/95 to-slate-800/95 border-slate-700/50 hover:border-indigo-500/50 transition-all backdrop-blur-xl shadow-xl"
                >
                  <div className={`w-14 h-14 rounded-xl bg-gradient-to-br ${cap.gradient} flex items-center justify-center mb-4 shadow-lg`}>
                    <Icon name={cap.icon as any} size={28} className="text-white" />
                  </div>
                  <h3 className="text-xl font-bold text-white mb-4">{cap.category}</h3>
                  <ul className="space-y-2">
                    {cap.items.map((item, i) => (
                      <li key={i} className="flex items-start gap-2 text-gray-300 text-sm">
                        <Icon name="Check" size={16} className="text-green-400 mt-0.5 shrink-0" />
                        <span>{item}</span>
                      </li>
                    ))}
                  </ul>
                </Card>
              ))}
            </div>
          )}
        </div>

        <Tabs defaultValue="translator" className="w-full">
          <TabsList className="grid w-full grid-cols-2 mb-8 bg-slate-900/50 border border-slate-700/50">
            <TabsTrigger value="translator" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-indigo-600 data-[state=active]:to-purple-600">
              <Icon name="Languages" size={18} className="mr-2" />
              –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫
            </TabsTrigger>
            <TabsTrigger value="demo" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-purple-600 data-[state=active]:to-pink-600">
              <Icon name="Sparkles" size={18} className="mr-2" />
              –î–µ–º–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
            </TabsTrigger>
          </TabsList>

          <TabsContent value="translator">
            <Card className="p-8 bg-gradient-to-br from-slate-900/95 to-slate-800/95 border-slate-700/50 backdrop-blur-xl shadow-2xl">
              <div className="mb-6">
                <h2 className="text-3xl font-bold text-white mb-2 flex items-center gap-3">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center">
                    <Icon name="Languages" size={24} className="text-white" />
                  </div>
                  –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
                </h2>
                <p className="text-gray-400">–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ 100+ —è–∑—ã–∫–æ–≤ –º–∏—Ä–∞</p>
              </div>

              <div className="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-sm font-medium text-gray-300 mb-2">–ò—Å—Ö–æ–¥–Ω—ã–π —è–∑—ã–∫</label>
                  <Select value={sourceLang} onValueChange={setSourceLang}>
                    <SelectTrigger className="bg-slate-800/50 border-slate-700 text-white">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent className="bg-slate-900 border-slate-700">
                      {languages.map(lang => (
                        <SelectItem key={lang.code} value={lang.code} className="text-white">
                          {lang.flag} {lang.name}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-300 mb-2">–¶–µ–ª–µ–≤–æ–π —è–∑—ã–∫</label>
                  <Select value={targetLang} onValueChange={setTargetLang}>
                    <SelectTrigger className="bg-slate-800/50 border-slate-700 text-white">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent className="bg-slate-900 border-slate-700">
                      {languages.filter(l => l.code !== sourceLang).map(lang => (
                        <SelectItem key={lang.code} value={lang.code} className="text-white">
                          {lang.flag} {lang.name}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-sm font-medium text-gray-300 mb-2">–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç</label>
                  <Textarea
                    value={translatorText}
                    onChange={(e) => setTranslatorText(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞..."
                    className="bg-slate-800/50 border-slate-700 text-white min-h-[200px] resize-none"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-300 mb-2">–ü–µ—Ä–µ–≤–æ–¥</label>
                  <div className="bg-slate-800/30 border border-slate-700 rounded-lg p-4 min-h-[200px] text-gray-300">
                    {translatedText || '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...'}
                  </div>
                </div>
              </div>

              <div className="flex gap-4">
                <Button
                  onClick={handleTranslate}
                  disabled={loading}
                  className="bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 flex-1"
                >
                  {loading ? (
                    <>
                      <Icon name="Loader2" size={20} className="mr-2 animate-spin" />
                      –ü–µ—Ä–µ–≤–æ–¥...
                    </>
                  ) : (
                    <>
                      <Icon name="ArrowRightLeft" size={20} className="mr-2" />
                      –ü–µ—Ä–µ–≤–µ—Å—Ç–∏
                    </>
                  )}
                </Button>
                <Button
                  onClick={() => {
                    const temp = sourceLang;
                    setSourceLang(targetLang);
                    setTargetLang(temp);
                    setTranslatorText(translatedText);
                    setTranslatedText(translatorText);
                  }}
                  variant="outline"
                  className="border-slate-700 hover:bg-slate-800"
                >
                  <Icon name="ArrowLeftRight" size={20} />
                </Button>
              </div>
            </Card>
          </TabsContent>

          <TabsContent value="demo">
            <div className="grid md:grid-cols-2 gap-6">
              <Card className="p-6 bg-gradient-to-br from-slate-900/95 to-slate-800/95 border-slate-700/50 hover:border-indigo-500/50 transition-all">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-blue-500 to-cyan-600 flex items-center justify-center">
                    <Icon name="Image" size={24} className="text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-white">–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h3>
                </div>
                <p className="text-gray-400 mb-4">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è</p>
                <Button className="w-full bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700">
                  <Icon name="Upload" size={20} className="mr-2" />
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                </Button>
              </Card>

              <Card className="p-6 bg-gradient-to-br from-slate-900/95 to-slate-800/95 border-slate-700/50 hover:border-purple-500/50 transition-all">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-purple-500 to-pink-600 flex items-center justify-center">
                    <Icon name="FileText" size={24} className="text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-white">–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</h3>
                </div>
                <p className="text-gray-400 mb-4">–ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF –∏–ª–∏ Word –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–ª—é—á–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–º–∞—Ä–∏</p>
                <Button className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700">
                  <Icon name="Upload" size={20} className="mr-2" />
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
                </Button>
              </Card>

              <Card className="p-6 bg-gradient-to-br from-slate-900/95 to-slate-800/95 border-slate-700/50 hover:border-green-500/50 transition-all">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-emerald-500 to-teal-600 flex items-center justify-center">
                    <Icon name="Code" size={24} className="text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-white">–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–¥–∞</h3>
                </div>
                <p className="text-gray-400 mb-4">–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ Python, JavaScript, SQL –∏–ª–∏ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ</p>
                <Button className="w-full bg-gradient-to-r from-emerald-600 to-teal-600 hover:from-emerald-700 hover:to-teal-700">
                  <Icon name="Terminal" size={20} className="mr-2" />
                  –°–æ–∑–¥–∞—Ç—å –∫–æ–¥
                </Button>
              </Card>

              <Card className="p-6 bg-gradient-to-br from-slate-900/95 to-slate-800/95 border-slate-700/50 hover:border-orange-500/50 transition-all">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-orange-500 to-red-600 flex items-center justify-center">
                    <Icon name="MessageSquare" size={24} className="text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-white">–ê–Ω–∞–ª–∏–∑ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏</h3>
                </div>
                <p className="text-gray-400 mb-4">–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–∫—Ä–∞—Å–∫—É —Ç–µ–∫—Å—Ç–∞: –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π, –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –∏–ª–∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π</p>
                <Button className="w-full bg-gradient-to-r from-orange-600 to-red-600 hover:from-orange-700 hover:to-red-700">
                  <Icon name="Smile" size={20} className="mr-2" />
                  –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
                </Button>
              </Card>
            </div>
          </TabsContent>
        </Tabs>

        <Card className="mt-12 p-8 bg-gradient-to-br from-indigo-900/40 to-purple-900/40 border-indigo-500/30 backdrop-blur-sm text-center">
          <div className="max-w-3xl mx-auto">
            <Icon name="Zap" size={48} className="text-indigo-400 mx-auto mb-4" />
            <h3 className="text-3xl font-bold text-white mb-3">–≠—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ!</h3>
            <p className="text-xl text-gray-300 mb-6">
              –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≥–ª–∞–≤–Ω–æ–º —á–∞—Ç–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ —á–∞—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ò–ò!
            </p>
            <Button
              onClick={() => window.location.href = '/?page=chat'}
              className="bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 px-8 py-6 text-lg"
            >
              <Icon name="MessageCircle" size={24} className="mr-2" />
              –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
            </Button>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default AITools;